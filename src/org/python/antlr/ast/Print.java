// Autogenerated AST node
package org.python.antlr.ast;
import org.python.antlr.PythonTree;
import org.antlr.runtime.Token;
import java.io.DataOutputStream;
import java.io.IOException;

public class Print extends stmtType {
    public exprType dest;
    public exprType[] values;
    public boolean nl;

    public static final String[] _fields = new String[] {"dest","values","nl"};

    public Print(PythonTree tree, exprType dest, exprType[] values, boolean nl)
    {
        super(tree);
        this.dest = dest;
        this.values = values;
        if (values != null) {
            for(int ivalues=0;ivalues<values.length;ivalues++) {
                addChild(values[ivalues]);
            }
        }
        this.nl = nl;
    }

    public String toString() {
        return "Print";
    }

    public <R> R accept(VisitorIF<R> visitor) throws Exception {
        return visitor.visitPrint(this);
    }

    public void traverse(VisitorIF visitor) throws Exception {
        if (dest != null)
            dest.accept(visitor);
        if (values != null) {
            for (int i = 0; i < values.length; i++) {
                if (values[i] != null)
                    values[i].accept(visitor);
            }
        }
    }

    public int getLineno() {
        return getLine();
    }

    public int getCol_offset() {
        return getCharPositionInLine();
    }

}
