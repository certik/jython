// Autogenerated AST node
package org.python.antlr.ast;
import org.python.antlr.PythonTree;
import org.antlr.runtime.Token;
import java.io.DataOutputStream;
import java.io.IOException;

public class Raise extends stmtType {
    public exprType type;
    public exprType inst;
    public exprType tback;

    public static final String[] _fields = new String[] {"type","inst","tback"};

    public Raise(Token token, exprType type, exprType inst, exprType tback) {
        super(token);
        this.type = type;
        this.inst = inst;
        this.tback = tback;
    }

    public Raise(PythonTree tree, exprType type, exprType inst, exprType tback)
    {
        super(tree);
        this.type = type;
        this.inst = inst;
        this.tback = tback;
    }

    public String toString() {
        return "Raise";
    }

    public <R> R accept(VisitorIF<R> visitor) throws Exception {
        return visitor.visitRaise(this);
    }

    public void traverse(VisitorIF visitor) throws Exception {
        if (type != null)
            type.accept(visitor);
        if (inst != null)
            inst.accept(visitor);
        if (tback != null)
            tback.accept(visitor);
    }

public int getLineno() {
    return getLine() + 1;
}

public int getCol_offset() {
    return getCharPositionInLine();
}

}
