// Autogenerated AST node
package org.python.antlr.ast;
import org.python.antlr.PythonTree;
import org.antlr.runtime.Token;
import java.io.DataOutputStream;
import java.io.IOException;

public class TryExcept extends stmtType {
    public stmtType[] body;
    public excepthandlerType[] handlers;
    public stmtType[] orelse;

    public static final String[] _fields = new String[]
    {"body","handlers","orelse"};

    public TryExcept(Token token, stmtType[] body, excepthandlerType[]
    handlers, stmtType[] orelse) {
        super(token);
        this.body = body;
        for(int ibody=0;ibody<body.length;ibody++) {
            addChild(body[ibody]);
        }
        this.handlers = handlers;
        for(int ihandlers=0;ihandlers<handlers.length;ihandlers++) {
            addChild(handlers[ihandlers]);
        }
        this.orelse = orelse;
        for(int iorelse=0;iorelse<orelse.length;iorelse++) {
            addChild(orelse[iorelse]);
        }
    }

    public TryExcept(PythonTree tree, stmtType[] body, excepthandlerType[]
    handlers, stmtType[] orelse) {
        super(tree);
        this.body = body;
        for(int ibody=0;ibody<body.length;ibody++) {
            addChild(body[ibody]);
        }
        this.handlers = handlers;
        for(int ihandlers=0;ihandlers<handlers.length;ihandlers++) {
            addChild(handlers[ihandlers]);
        }
        this.orelse = orelse;
        for(int iorelse=0;iorelse<orelse.length;iorelse++) {
            addChild(orelse[iorelse]);
        }
    }

    public String toString() {
        return "TryExcept";
    }

}
