// Autogenerated AST node
package org.python.antlr.ast;
import org.python.antlr.PythonTree;
import org.antlr.runtime.Token;
import java.io.DataOutputStream;
import java.io.IOException;

public class IfExp extends exprType {
    public exprType test;
    public exprType body;
    public exprType orelse;

    public static final String[] _fields = new String[]
    {"test","body","orelse"};

    public IfExp(Token token, exprType test, exprType body, exprType orelse) {
        super(token);
        this.test = test;
        this.body = body;
        this.orelse = orelse;
    }

    public IfExp(PythonTree tree, exprType test, exprType body, exprType
    orelse) {
        super(tree);
        this.test = test;
        this.body = body;
        this.orelse = orelse;
    }

    public String toString() {
        return "IfExp";
    }

    public <R> R accept(VisitorIF<R> visitor) throws Exception {
        return visitor.visitIfExp(this);
    }

    public void traverse(VisitorIF visitor) throws Exception {
        if (test != null)
            test.accept(visitor);
        if (body != null)
            body.accept(visitor);
        if (orelse != null)
            orelse.accept(visitor);
    }

}
