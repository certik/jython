# setup
type_name: complex
type_class: PyComplex
# getsets
expose_getset: imag getImag
expose_getset: real getReal
# exposed methods
expose_unary: __abs__ __float__ __int__ __long__ \
 __neg__ __pos__ 
expose_binary: __add__ __div__ __divmod__ __floordiv__ \
 __mod__ __mul__ __radd__ __rdiv__ __rdivmod__ \
 __rfloordiv__ __rmod__ __rmul__  __rpow__ __rsub__ \
 __rtruediv__ __sub__ __truediv__ __eq__ __ne__ __ge__ \
 __le__ __gt__ __lt__
#expose_vanilla_cmp
expose_vanilla_pow
expose_new_immutable:
expose_meth: conjugate
expose_meth: :b __nonzero__
expose_meth: __repr__
  return new PyString(((`typ)self).complex_toString());
expose_meth: __str__
  return new PyString(((`typ)self).complex_toString());
expose_meth: __hash__
  return Py.newInteger(((`typ)self).complex_hashCode());
expose_meth: __getnewargs__
# TODO
# (__coerce__, __doc__)
# (__reduce__ ?)
