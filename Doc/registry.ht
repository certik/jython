Title: The JPython Registry

<h3>The JPython Registry</h3>

Because there is no good system independent equivalent of the Windows
Registry (or Unix envrionment variables) Java has it's own environment
variable namespace.  JPython aquires it's namespace from the following
three sources (later sources override defaults found in earlier
places).

<UL>
    <LI>The Java system properties: typically passed in on the command
	line</LI>

    <LI>The file pointed to by the Java system property
	"install.root"/registry</LI>

    <UL>
	<LI>If there is no "install.root" property, JPython tries to
	    set it by looking for jpython in the classpath</LI>

	<LI>Whatever value for install.root is found, sys.prefix is
	    set to this, and sys.path has "install.root"/Lib
	    appended</LI>
    </UL>

    <LI>The file contained in "user.home"+".jpython"</LI>
</UL>

Currently there are three important variables contained in this namespace:
<UL>
    <LI>python.path</LI>

    <UL>
	<LI>Equivalent to the current PYTHONPATH environment variable</LI>

	<LI>Future versions will allow this to be hierarchical as is
	    done for java.packages</LI>
    </UL>

    <LI>java.packages</LI>

    <UL>
	<LI>Contains a list of all java packages installed on your
	    system that JPython wants easy access to</LI>

	<LI>This can be used hierarchically, see the default
	    "registry" file for an example</LI>
    </UL>

    <LI>python.proxy.savedir</LI>

    <UL>
	<LI>This variable should typically be left undefined.  It
	    is used for caching proxy class definitions.</LI>

	<BR>See the section on Subclassing Java Classes for more
	information.
    </UL>
</UL>
